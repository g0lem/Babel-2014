#version 330 core

layout(location = 0) in vec3 Positions;
layout(location = 1) in vec2 TexCoords;
layout(location = 2) in vec3 Normals;
layout (location = 3) in ivec4 BoneIDs;
layout (location = 4) in vec4 Weights;

out vec2 UV;
out vec3 normals;
out vec3 worlds;
out vec4 eyePos;

const int MAX_BONES = 128;

uniform mat4 MVP;
uniform mat4 MV;
uniform mat4 M;
uniform mat4 Bones[MAX_BONES];

void main(){

    mat4 BoneTransform = mat4(1.0);
	if (Weights[0] != 0){
	BoneTransform = Bones[BoneIDs[0]] * Weights[0];
	BoneTransform += Bones[BoneIDs[1]] * Weights[1];
	BoneTransform += Bones[BoneIDs[2]] * Weights[2];
	BoneTransform += Bones[BoneIDs[3]] * Weights[3];
	}
	vec4 PosL = BoneTransform*vec4(Positions, 1.0);

	 gl_Position =  MVP * PosL;
	 UV = TexCoords;
	 vec4 NormalL = BoneTransform * vec4(Normals, 0.0);
     normals      = (M * NormalL).xyz;
     worlds       = (M * PosL).xyz;   
	 eyePos       = MV * vec4(Positions,1.0);
	   
}



